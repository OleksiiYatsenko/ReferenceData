//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReferenceData.LocationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServiceReference.ILocalService")]
    public interface ILocalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocations", ReplyAction="http://tempuri.org/ILocalService/GetLocationsResponse")]
        ReferenceData.Model.Location[] GetLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocations", ReplyAction="http://tempuri.org/ILocalService/GetLocationsResponse")]
        System.Threading.Tasks.Task<ReferenceData.Model.Location[]> GetLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocationById", ReplyAction="http://tempuri.org/ILocalService/GetLocationByIdResponse")]
        ReferenceData.Model.Location GetLocationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocationById", ReplyAction="http://tempuri.org/ILocalService/GetLocationByIdResponse")]
        System.Threading.Tasks.Task<ReferenceData.Model.Location> GetLocationByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocationsBySubdivisionId", ReplyAction="http://tempuri.org/ILocalService/GetLocationsBySubdivisionIdResponse")]
        ReferenceData.Model.Location[] GetLocationsBySubdivisionId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalService/GetLocationsBySubdivisionId", ReplyAction="http://tempuri.org/ILocalService/GetLocationsBySubdivisionIdResponse")]
        System.Threading.Tasks.Task<ReferenceData.Model.Location[]> GetLocationsBySubdivisionIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocalServiceChannel : ReferenceData.LocationServiceReference.ILocalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocalServiceClient : System.ServiceModel.ClientBase<ReferenceData.LocationServiceReference.ILocalService>, ReferenceData.LocationServiceReference.ILocalService {
        
        public LocalServiceClient() {
        }
        
        public LocalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReferenceData.Model.Location[] GetLocations() {
            return base.Channel.GetLocations();
        }
        
        public System.Threading.Tasks.Task<ReferenceData.Model.Location[]> GetLocationsAsync() {
            return base.Channel.GetLocationsAsync();
        }
        
        public ReferenceData.Model.Location GetLocationById(int id) {
            return base.Channel.GetLocationById(id);
        }
        
        public System.Threading.Tasks.Task<ReferenceData.Model.Location> GetLocationByIdAsync(int id) {
            return base.Channel.GetLocationByIdAsync(id);
        }
        
        public ReferenceData.Model.Location[] GetLocationsBySubdivisionId(int id) {
            return base.Channel.GetLocationsBySubdivisionId(id);
        }
        
        public System.Threading.Tasks.Task<ReferenceData.Model.Location[]> GetLocationsBySubdivisionIdAsync(int id) {
            return base.Channel.GetLocationsBySubdivisionIdAsync(id);
        }
    }
}
